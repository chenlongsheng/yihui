<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jeeplus.modules.sys.dao.UserDao">

	<sql id="userColumns">
		concat(a.id) id,
		a.company_id AS "company.id",
		a.office_id AS "office.id",
		a.login_name,
		a.password,
		a.no,			 
		a.name,
		a.email,
		a.phone,
		a.mobile,
		a.user_type,
		a.login_ip,
		a.login_date,
		a.remarks,
		a.login_flag loginFlag,
		a.photo,
		a.qrcode,
		a.sign,
		a.create_by AS
		"createBy.id",
		a.create_date,
		a.update_by AS "updateBy.id",
		a.update_date,
		a.del_flag,
		a.org_id as orgId,

		c.name AS "company.name",
		c.parent_id AS "company.parent.id",
		c.parent_ids AS "company.parentIds",
		ca.id AS "company.area.id",
		ca.name AS
		"company.area.name",
		ca.parent_id AS "company.area.parent.id",
		ca.parent_ids AS "company.area.parentIds",
		o.name AS
		"office.name",
		o.parent_id AS "office.parent.id",
		o.parent_ids AS "office.parentIds",
		oa.id AS "office.area.id",
		oa.name
		AS "office.area.name",
		oa.parent_id AS "office.area.parent.id",
		oa.parent_ids AS "office.area.parentIds",
		cu.id AS
		"company.primaryPerson.id",
		cu.name AS "company.primaryPerson.name",
		cu2.id AS "company.deputyPerson.id",
		cu2.name AS
		"company.deputyPerson.name",
		ou.id AS "office.primaryPerson.id",
		ou.name AS "office.primaryPerson.name",
		ou2.id AS
		"office.deputyPerson.id",
		ou2.name AS "office.deputyPerson.name",
		g.id AS "area.id",
		g.name AS "area.name"
	</sql>

	<sql id="userJoins">
		LEFT JOIN sys_office c ON c.id = a.company_id
		LEFT JOIN t_org ca ON ca.id = c.area_id
		LEFT JOIN sys_office o ON o.id = a.office_id
		LEFT JOIN t_org oa ON oa.id = o.area_id
		LEFT JOIN sys_user cu ON cu.id = c.primary_person
		LEFT JOIN sys_user cu2 ON cu2.id = c.deputy_person
		LEFT JOIN sys_user ou ON ou.id = o.primary_person
		LEFT JOIN sys_user ou2 ON ou2.id =
		o.deputy_person
		LEFT JOIN t_org g ON g.id = a.org_id
	</sql>

	<!-- 根据编号获得用户 -->
	<select id="get" resultType="User">
		SELECT
		<include refid="userColumns" />
		,ur.role_id as "role.id",ro.role_type "roleType",
		g.code AS "area.code",	
		a.type,
		a.parent_id parentId,
		a.parent_ids parentIds,
		a.begin_date as beginDate,
		a.end_date as endDate
		FROM sys_user a
		<include refid="userJoins" />
		LEFT JOIN sys_user_role ur ON ur.user_id = a.id
		LEFT JOIN sys_role ro ON ro.id = ur.role_id
		WHERE a.id = #{id}
	</select>

	<!-- 根据登录名查询用户 -->
	<select id="getByLoginName" resultType="User" parameterType="User">
		SELECT
		<include refid="userColumns" />
		,a.type
		FROM sys_user a
		<include refid="userJoins" />
		WHERE a.login_name = #{loginName} AND a.del_flag = #{DEL_FLAG_NORMAL}
	</select>
<select id="getOrgId" resultType="java.lang.String">
	select concat(t_org_id) orgId from sys_user_bureau u inner join pdf_org o on o.bureau_id = u.bureau_id where u.user_id = #{userId} limit 1
</select>
	<!-- 分页查询用户信息 -->
	<select id="findList" resultType="User">
		SELECT
		<include refid="userColumns" />
		,ro.id as	"roleId",
		concat(DATE_FORMAT(a.begin_date, '%Y/%m/%d'),'-',
		DATE_FORMAT(a.end_date, '%Y/%m/%d')) userDate,
	    DATE_FORMAT(a.begin_date, '%Y/%m/%d') beginDate,
		DATE_FORMAT(a.end_date, '%Y/%m/%d') endDate,
		ro.name as	"role.name",
		ro.name as	"roleName",
		concat(torg.name,g.name) as	orgName
		FROM sys_user a
		<include refid="userJoins" />
		left join t_org torg on torg.id=g.parent_id
		left JOIN sys_user_role ur ON ur.user_id = a.id
		left join sys_role ro on ro.id = ur.role_id
		left join sys_user_bureau ub on ub.user_id = a.id
        left join pdf_electricity_bureau eb on eb.id = ub.bureau_id
		WHERE a.del_flag = #{DEL_FLAG_NORMAL} and (a.parent_ids like CONCAT('%',#{id},'%') or a.id  =#{id})
		<if test="bureauId != null and bureauId != ''">
			and eb.id = #{bureauId}	
		</if>
		<if test="company != null and company.id != null and company.id != ''">
			AND (c.id = #{company.id} OR c.parent_ids LIKE
			<if test="dbName == 'oracle'">'%,'||#{company.id}||',%')</if>
			<if test="dbName == 'mysql'">CONCAT('%,', #{company.id}, ',%'))</if>
		</if>
		<if test="office != null and office.id != null and office.id != ''">
			AND (o.id = #{office.id} OR o.parent_ids LIKE
			<if test="dbName == 'oracle'">'%,'||#{office.id}||',%')</if>
			<if test="dbName == 'mysql'">CONCAT('%,', #{office.id}, ',%'))</if>
		</if>
		<!-- 如果不是超级管理员，则不显示超级管理员用户 -->
		<if test="!currentUser.admin">
			AND a.id != '1'
		</if>
		<if test="loginName != null and loginName != ''">
			AND a.login_name like
			<if test="dbName == 'oracle'">'%'||#{loginName}||'%'</if>
			<if test="dbName == 'mysql'">CONCAT('%', #{loginName}, '%')</if>
		</if>
		<if test="name != null and name != ''">
			AND a.name like
			<if test="dbName == 'oracle'">'%'||#{name}||'%'</if>
			<if test="dbName == 'mysql'">CONCAT('%', #{name}, '%')</if>
		</if>
		<if test="mobile != null and mobile != ''">
			AND a.mobile like CONCAT('%', #{mobile}, '%')
		</if>
		<if test="loginFlag != null and loginFlag != ''">
			AND a.login_flag like CONCAT('%', #{loginFlag}, '%')
		</if>
		<if test="email != null and email != ''">
			AND a.email like CONCAT('%', #{email}, '%')
		</if>
		<if test="role != null and role.id != '' and role.id != null">
			AND ro.id = #{role.id}
		</if>
		<if test="area != null and area.id != '' and area.id != null">
			AND g.parent_ids like CONCAT('%', #{area.id}, '%')
		</if>
		<if test="createDate !=null and createDate !=''">
			and a.create_date &gt;= CONCAT(#{createDate})
		</if>
		<if test="updateDate !=null and updateDate !=''">
			and a.create_date &lt;=CONCAT(#{updateDate})
		</if>	
		GROUP BY a.id
        ORDER BY a.create_date desc 
	</select>


	<!-- 根据部门查询用户信息 -->
	<select id="findListByOffice" resultType="User">
		SELECT
		<include refid="userColumns" />
		FROM sys_user a
		<include refid="userJoins" />
		WHERE a.del_flag = #{DEL_FLAG_NORMAL}
		<if test="company != null and company.id != null and company.id != ''">
			AND c.id = #{company.id}
		</if>
		<if test="office != null and office.id != null and office.id != ''">
			AND o.id = #{office.id}
		</if>
		<if test="office == null">
			AND (o.id = '' or o.id is null)
		</if>
		<if test="loginName != null and loginName != ''">
			AND a.login_name like
			<if test="dbName == 'oracle'">'%'||#{loginName}||'%'</if>
			<if test="dbName == 'mysql'">CONCAT('%', #{loginName}, '%')</if>
		</if>
		<if test="name != null and name != ''">
			AND a.name like
			<if test="dbName == 'oracle'">'%'||#{name}||'%'</if>
			<if test="dbName == 'mysql'">CONCAT('%', #{name}, '%')</if>
		</if>
		<!-- 数据范围过滤 -->
		${sqlMap.dsf}
		<!-- 排序 -->
		ORDER BY a.name
	</select>

	<!-- 根据OfficeId获取用户（树查询用户时用） -->
	<select id="findUserByOfficeId" resultType="User" useCache="true">
		SELECT
		a.id, 
		a.name, 
		a.login_name
		FROM sys_user a
		WHERE
		a.del_flag = #{DEL_FLAG_NORMAL}
		AND a.office_id = #{office.id}
		ORDER BY a.name
	</select>

	<!-- 查询全部用户 -->
	<select id="findAllList" resultType="User">
		SELECT
		<include refid="userColumns" />
		FROM sys_user a
		<include refid="userJoins" />
		WHERE a.del_flag = #{DEL_FLAG_NORMAL}
		ORDER BY c.code, o.code, a.name
	</select>

	<!-- 查询全部用户数目 -->
	<select id="findAllCount" resultType="long">
		SELECT
		COUNT(1)
		FROM sys_user a
		WHERE a.del_flag = #{DEL_FLAG_NORMAL}
	</select>

	<!-- 插入用户 -->
	<insert id="insert">
		INSERT INTO sys_user(
		id,
		parent_id,
		parent_ids,
		type,
		foreign_id,
		company_id,
		org_id,
		office_id,
		login_name,
		password,
		no,
		name,
		email,
		phone,
		mobile,
		user_type,
		create_by,
		create_date,
		update_by,
		update_date,
		remarks,
		login_flag,
		photo,
		qrcode,
		del_flag,
		sex,
		begin_date,
		end_date
		)
		VALUES (
		#{id},
		#{parentId},
		#{parentIds},
		#{type},
		#{foreignId},
		1,
		#{area.id},
		1,
		#{loginName},
		#{password},
		#{no},
		#{name},
		#{email},
		#{phone},
		#{mobile},
		#{userType},
		#{createBy.id},
		#{createDate},
		#{updateBy.id},
		#{updateDate},
		#{remarks},
		#{loginFlag},
		#{photo},
		#{qrCode},
		#{delFlag},
		#{sex},
		#{beginDate},
		#{endDate}
		)
	</insert>

	<!-- 更新用户 -->
	<update id="update">
		UPDATE sys_user SET
		sex = #{sex},
		org_id = #{area.id},
		login_name = #{loginName},		
		<if test="password != null and password != ''">
			password = #{password},
		</if>
		no = #{no},
		name = #{name},
		email =	#{email},
		phone =	#{phone},
		mobile = #{mobile},
		user_type = #{userType},
		update_by =	#{updateBy.id},
		update_date =
		#{updateDate},
		remarks = #{remarks},
		login_flag = #{loginFlag},
		photo = #{photo},
		qrcode = #{qrCode},		
		begin_date = #{beginDate},
		end_date = #{endDate}
		WHERE id = #{id}
	</update>

	<!-- 删除用户和角色关联表数据 -->
	<delete id="deleteUserRole">
		DELETE FROM sys_user_role WHERE user_id = #{id}
	</delete>

	<delete id="deleteUserElec">
		DELETE from sys_user_bureau where user_id = #{userId}
	</delete>
	
	<delete id="deleteUserPrincipal">
		delete from pdf_principal where user_id = #{userId}
	</delete>
	

	<!-- 插入用户和角色关联表数据 -->
	<insert id="insertUserRole">
		INSERT INTO sys_user_role(user_id,role_id) values (#{id},#{role.id});
	</insert>


	<!-- 更新用户信息 -->
	<update id="updateUserInfo">
		UPDATE sys_user SET
		name = #{name},
		email = #{email},
		phone = #{phone},
		mobile = #{mobile},
		update_by =
		#{updateBy.id},
		update_date = #{updateDate},
		remarks = #{remarks},
		photo = #{photo},
		qrcode = #{qrCode},
		sign = #{sign}
		WHERE id = #{id}
	</update>

	<!-- 更新用户密码 -->
	<update id="updatePasswordById">
		UPDATE sys_user SET
		password = #{password}
		WHERE id = #{id}
	</update>

	<!-- 更新登录信息，如登录IP、登录时间 -->
	<update id="updateLoginInfo">
		UPDATE sys_user SET
		login_ip = #{loginIp},
		login_Date = #{loginDate}
		WHERE id = #{id}
	</update>

	<!-- 物理删除用户 -->
	<update id="delete">
		DELETE FROM sys_user
		WHERE id = #{id}
	</update>
	<update id="deleteUserOrg">
		delete from sys_user_bureau where user_id = #{userId}
	</update>
	<!-- 逻辑删除用户 -->
	<update id="deleteByLogic">
		UPDATE sys_user SET
		del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>

	<!-- 根据实体名称和字段名称和字段值获取唯一记录 -->
	<select id="findUniqueByProperty" resultType="User" statementType="STATEMENT">
		select * from sys_user where ${propertyName} =	'${value}'
	</select>
	<!-- 添加好友 -->
	<insert id="insertFriend">
		INSERT INTO sys_user_friend(
		id,
		userId,
		friendId
		) VALUES (
		#{id},
		#{userId},
		#{friendId}
		)
	</insert>

	<!-- 根据用户id和好友id获取唯一记录 -->
	<select id="findFriend" resultType="User">
		SELECT
		*
		FROM sys_user a
		LEFT JOIN sys_user_friend p ON p.userId = a.id
		WHERE
		p.userId = #{userId} and p.friendId = #{friendId}
	</select>

	<!-- 删除好友 -->
	<select id="deleteFriend">
		DELETE FROM sys_user_friend WHERE userId = #{userId} and friendId = #{friendId}
	</select>

	<!-- 查询我的好友列表 -->
	<select id="findFriends" resultType="User">
		SELECT
		<include refid="userColumns" /><!-- , ro.office_id AS "roleList.officeList.id" -->
		FROM sys_user a
		<include refid="userJoins" />
		LEFT JOIN sys_user_friend p ON p.friendId = a.id
		WHERE p.userId = #{id}
	</select>

	<!-- 根据条件检索用户，添加到好友列表 -->
	<select id="searchUsers" resultType="User">
		SELECT
		<include refid="userColumns" /><!-- , ro.office_id AS "roleList.officeList.id" -->
		FROM sys_user a
		<include refid="userJoins" />
		<if test="name != null and name != ''">
			WHERE a.name like
			<if test="dbName == 'oracle'">'%'||#{name}||'%'</if>
			<if test="dbName == 'mysql'">CONCAT('%', #{name}, '%')</if>
		</if>
	</select>


	<select id="userRole" resultType="java.lang.String">
		SELECT 
		b.role_id 
		FROM 
		sys_user a 
		INNER JOIN sys_user_role b on a.id = b.user_id
		where a.id=#{userId}
	</select>

	<select id="findMenuListByUser" resultType="com.alibaba.fastjson.JSONObject">
		SELECT
		distinct(concat(b.menu_id)) AS menuId,
		c.name as menuName,
		c.href as href,
		c.permission as permission,
		c.icon as icon
		FROM
		sys_user_role a
		LEFT JOIN sys_role_menu b ON a.role_id =
		b.role_id
		left join sys_menu c on b.menu_id = c.id
		where a.user_id = #{userId}
	</select>


	<!-- 新的代码 -->
	<!-- 插入用户区域 -->
	<insert id="insertUserOrg">
		INSERT into sys_user_bureau(user_id,bureau_id) values(#{userId},#{orgId});
	</insert>


	
	<select id="roleNameList" resultType="com.jeeplus.common.persistence.MapEntity">
	SELECT
	concat(r.id) as id,
	r.name
	from
	sys_role r
	<if test="userId != null and userId !=1">
		left join sys_user_role sr on sr.role_id =r.id
		left join sys_user u on u.id = sr.user_id
	</if>
	<where>
		r.id != 100
		<if test="userId != null and userId !=1">
			and u.id = #{userId}
		</if>
		order by r.create_date desc
	</where>       
     </select>
     
     
	<update id="resetPassword">
		UPDATE sys_user set password = #{password} where id= #{id}
	</update>


	<!-- 获取配电房集合 -->
	<select id="userAreaList" resultType="com.jeeplus.common.persistence.MapEntity">
		select
		concat(a.id) as id,
		concat(a.parent_id) as parentId,
		a.name,
		concat(o.t_org_id) as selectId
		from
		t_org a left join pdf_org o on o.t_org_id = a.id
		left join sys_user_bureau b on o.bureau_id = b.bureau_id
		where
		code like concat((SELECT code from t_org where	id = #{orgId}),'%')	and a.type = 5
	</select>

	<select id="sysUserOrgList" resultType="java.lang.String">
		select t_org_id orgId 
		from 
		sys_user_bureau u 
		inner join pdf_org o on u.bureau_id = o.bureau_id 
		where u.user_id = #{userId}
	</select>
	
	<select id="getUserPId" resultType="java.lang.String">
		SELECT 
		a.id userPId 
		from sys_user a 
		where  
	    FIND_IN_SET (a.id,(select CONCAT(parent_ids,id) from sys_user where id = #{userId}))
	    and type = 2
	</select>
	
	<select  id="getBureauListByUserId" resultType="com.jeeplus.common.persistence.MapEntity">
		select
		eb.id bureauId,
		eb.name bureauName
		from 
		sys_user_bureau ub 
		inner join pdf_electricity_bureau eb
		on ub.bureau_id = eb.id
		<where>
		<if test="userId !=null and  userId !=''">		
		 ub.user_id = #{userId}
		</if>	
		</where>
		ORDER BY eb.type
    </select>

	<select id="getBureauIdsByUser" resultType="com.jeeplus.common.persistence.MapEntity">
		select 
		CONCAT(eb.parent_ids,eb.id) pIds,
		eb.id,
		eb.name,
		eb.code
		from pdf_electricity_bureau eb	
		inner join sys_user_bureau ub on eb.id = ub.bureau_id	
	    where ub.user_id = #{userId}   
     </select>

      <select id="getAllBureauIds" resultType="com.jeeplus.common.persistence.MapEntity">
		select 
		CONCAT(eb.parent_ids,eb.id) pIds,
		eb.id,
		eb.name,
		eb.code
		from pdf_electricity_bureau eb
		</select>
</mapper>